$date
	Wed Nov  1 21:31:37 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module mac_tb $end
$var wire 16 ! out [15:0] $end
$var parameter 32 " bw $end
$var parameter 32 # psum_bw $end
$var reg 4 $ a [3:0] $end
$var reg 4 % b [3:0] $end
$var reg 16 & c [15:0] $end
$var reg 1 ' clk $end
$var reg 16 ( expected_out [15:0] $end
$var integer 32 ) i [31:0] $end
$var integer 32 * w_dec [31:0] $end
$var integer 32 + w_file [31:0] $end
$var integer 32 , w_scan_file [31:0] $end
$var integer 32 - x_dec [31:0] $end
$var integer 32 . x_file [31:0] $end
$var integer 32 / x_scan_file [31:0] $end
$scope function mac_predicted $end
$var reg 4 0 a [3:0] $end
$var reg 4 1 b [3:0] $end
$var reg 16 2 c [15:0] $end
$var reg 8 3 product [7:0] $end
$upscope $end
$scope function w_bin $end
$var integer 32 4 weight [31:0] $end
$upscope $end
$scope function x_bin $end
$var integer 32 5 activation [31:0] $end
$upscope $end
$scope module mac_wrapper_instance $end
$var wire 4 6 a [3:0] $end
$var wire 4 7 b [3:0] $end
$var wire 16 8 c [15:0] $end
$var wire 1 ' clk $end
$var wire 16 9 out [15:0] $end
$var parameter 32 : bw $end
$var parameter 32 ; psum_bw $end
$var reg 4 < a_q [3:0] $end
$var reg 4 = b_q [3:0] $end
$var reg 16 > c_q [15:0] $end
$scope module mac_instance $end
$var wire 4 ? a [3:0] $end
$var wire 4 @ b [3:0] $end
$var wire 16 A c [15:0] $end
$var wire 1 B clk $end
$var wire 8 C product [7:0] $end
$var wire 16 D out [15:0] $end
$var parameter 32 E bw $end
$var parameter 32 F psum_bw $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10000 F
b100 E
b10000 ;
b100 :
b10000 #
b100 "
$end
#0
$dumpvars
bx D
bx C
zB
bx A
bx @
bx ?
bx >
bx =
bx <
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
b10000000000000000000000000000100 .
bx -
bx ,
b10000000000000000000000000000011 +
bx *
bx )
b0 (
0'
bx &
bx %
bx $
bx !
$end
#2
1'
#3
b0 )
0'
#4
1'
#5
b1 )
b110 (
b110 3
b110 0
b1 1
b0 2
b0 &
b0 8
b1 %
b1 7
b1 4
b110 $
b110 6
b0 5
b1 /
b110 -
b1 ,
b1 *
0'
#6
b110 !
b110 9
b110 D
b0 >
b0 A
b110 C
b110 <
b110 ?
b1 =
b1 @
1'
#7
b10 )
b1111111111010101 (
b11001111 3
b111 0
b1001 1
b110 2
b110 &
b110 8
b1001 %
b1001 7
b1 4
b111 $
b111 6
b0 5
b111 -
b11111111111111111111111111111001 *
0'
#8
b110 >
b110 A
b111 <
b111 ?
b1111111111010101 !
b1111111111010101 9
b1111111111010101 D
b11001111 C
b1001 =
b1001 @
1'
#9
b11 )
b1111111111011100 (
b111 3
b1 0
b111 1
b1111111111010101 2
b1111111111010101 &
b1111111111010101 8
b111 %
b111 7
b1 4
b1 $
b1 6
b0 5
b1 -
b111 *
0'
#10
b1111111111010101 >
b1111111111010101 A
b1 <
b1 ?
b1111111111011100 !
b1111111111011100 9
b1111111111011100 D
b111 C
b111 =
b111 @
1'
#11
b100 )
b1111111111010000 (
b11110100 3
b11 0
b1100 1
b1111111111011100 2
b1111111111011100 &
b1111111111011100 8
b1100 %
b1100 7
b0 4
b11 $
b11 6
b0 5
b11 -
b11111111111111111111111111111100 *
0'
#12
b1111111111011100 >
b1111111111011100 A
b11 <
b11 ?
b1111111111010000 !
b1111111111010000 9
b1111111111010000 D
b11110100 C
b1100 =
b1100 @
1'
#13
b101 )
b1111111111001010 (
b11111010 3
b10 0
b1101 1
b1111111111010000 2
b1111111111010000 &
b1111111111010000 8
b1101 %
b1101 7
b1 4
b10 $
b10 6
b0 5
b10 -
b11111111111111111111111111111101 *
0'
#14
b1111111111010000 >
b1111111111010000 A
b10 <
b10 ?
b1111111111001010 !
b1111111111001010 9
b1111111111001010 D
b11111010 C
b1101 =
b1101 @
1'
#15
b110 )
b1111111111000110 (
b11111100 3
b1110 1
b1111111111001010 2
b1111111111001010 &
b1111111111001010 8
b1110 %
b1110 7
b0 4
b0 5
b11111111111111111111111111111110 *
0'
#16
b1111111111001010 >
b1111111111001010 A
b1111111111000110 !
b1111111111000110 9
b1111111111000110 D
b11111100 C
b1110 =
b1110 @
1'
#17
b111 )
b1111111110001010 (
b11000100 3
b1111 0
b1100 1
b1111111111000110 2
b1111111111000110 &
b1111111111000110 8
b1100 %
b1100 7
b0 4
b1111 $
b1111 6
b0 5
b1111 -
b11111111111111111111111111111100 *
0'
#18
b1111111111000110 >
b1111111111000110 A
b1111 <
b1111 ?
b1111111110001010 !
b1111111110001010 9
b1111111110001010 D
b11000100 C
b1100 =
b1100 @
1'
#19
b1000 )
b1111111110011110 (
b10100 3
b100 0
b101 1
b1111111110001010 2
b1111111110001010 &
b1111111110001010 8
b101 %
b101 7
b1 4
b100 $
b100 6
b0 5
b100 -
b101 *
0'
#20
b1111111110001010 >
b1111111110001010 A
b100 <
b100 ?
b1111111110011110 !
b1111111110011110 9
b1111111110011110 D
b10100 C
b101 =
b101 @
1'
#21
b1001 )
b1111111101111010 (
b11011100 3
b110 0
b1010 1
b1111111110011110 2
b1111111110011110 &
b1111111110011110 8
b1010 %
b1010 7
b0 4
b110 $
b110 6
b0 5
b110 -
b11111111111111111111111111111010 *
0'
#22
b1111111110011110 >
b1111111110011110 A
b110 <
b110 ?
b1111111101111010 !
b1111111101111010 9
b1111111101111010 D
b11011100 C
b1010 =
b1010 @
1'
#23
b1010 )
b1111111110001010 (
b10000 3
b100 0
b100 1
b1111111101111010 2
b1111111101111010 &
b1111111101111010 8
b100 %
b100 7
b0 4
b100 $
b100 6
b0 5
b100 -
b100 *
0'
#24
b1111111101111010 >
b1111111101111010 A
b100 <
b100 ?
b1111111110001010 !
b1111111110001010 9
b1111111110001010 D
b10000 C
b100 =
b100 @
1'
#25
0'
#35
